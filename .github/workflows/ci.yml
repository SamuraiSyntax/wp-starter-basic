name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [16.x, 18.x]

    steps:
      - uses: actions/checkout@v3

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci || npm install

      - name: Build CSS
        run: npm run sass:build || true

      - name: Run linters
        run: npm run lint || true

  php:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        php-versions: ['7.4', '8.0', '8.1']

    steps:
      - uses: actions/checkout@v3

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-versions }}
          tools: composer:v2
          coverage: none

      - name: Get composer cache directory
        id: composer-cache
        run: echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT

      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: Install dependencies
        run: composer install --prefer-dist --no-progress

      - name: Create PHP_CodeSniffer config
        run: |
          echo '<?xml version="1.0"?>
          <ruleset name="WordPress Theme Coding Standards">
            <description>PHPCS Ruleset for a WordPress Theme</description>
            <rule ref="WordPress-Core"/>
            <rule ref="WordPress-Docs"/>
            <rule ref="WordPress-Extra"/>
            <file>.</file>
            <exclude-pattern>/vendor/*</exclude-pattern>
            <exclude-pattern>/node_modules/*</exclude-pattern>
          </ruleset>' > phpcs.xml

      - name: Run PHP CodeSniffer
        run: vendor/bin/phpcs --standard=phpcs.xml || true
